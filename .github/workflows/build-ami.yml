name: build-ami

on:
  push:
    branches:
      - main

permissions:
  contents: read

env:
  PRODUCT_VERSION: "1.8.6" # or: "latest"

jobs:
  build-ami:
    runs-on: ubuntu-latest
    name: Build webapp ami
    env:
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      MYSQL_DB: ${{ vars.MYSQL_DB }}
      DEBIAN_AMI_ID: ${{ vars.DEBIAN_AMI_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: checks
        run: git rev-parse HEAD && git status

      - name: pwd ls 
        run: pwd && ls -al

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: install mariadb
        uses: getong/mariadb-action@v1.1
        with:
          host port: 3306 # Optional, default value is 3306. The port of host
          container port: 3306 # Optional, default value is 3306. The port of container
          mariadb version: '10.4.10' # Optional, default value is "latest". The version of the MariaDB
          mysql database: ${{ vars.MYSQL_DB }} # Optional, default value is "test". The specified database which will be create
          mysql user: ${{ secrets.MYSQL_USER }} # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
          mysql password: ${{ secrets.MYSQL_PASSWORD }}
      
      - name: integration test
        run: gradle test
        env:
          ACTIONS_RUNNER_DEBUG: ${{ secrets.ACTIONS_RUNNER_DEBUG }}
      
      - name: Build with Gradle
        run: gradle assemble
        env:
          ACTIONS_RUNNER_DEBUG: ${{ secrets.ACTIONS_RUNNER_DEBUG }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: ${{ env.PRODUCT_VERSION }}

      - name: Run `packer init`
        id: init
        working-directory: ./packer
        run: "packer init ."

      - name: Run `packer build`
        id: format
        working-directory: ./packer
        run: "packer build --var aws_profile=default --var source_ami={{ vars.DEBIAN_AMI_ID }} ."