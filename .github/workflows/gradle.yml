# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  integration-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: install mariadb
      uses: getong/mariadb-action@v1.1
      with:
        host port: 3306 # Optional, default value is 3306. The port of host
        container port: 3306 # Optional, default value is 3306. The port of container
        mariadb version: '10.4.10' # Optional, default value is "latest". The version of the MariaDB
        mysql database: 'db' # Optional, default value is "test". The specified database which will be create
        mysql user: ${{ secrets.MYSQL_USER }} # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
        mysql password: ${{ secrets.MYSQL_PASSWORD }}
    - name: checks
      run: java -version && pwd && ls -al
    - name: Test with Gradle
      run: gradle test
      env:
        ACTIONS_RUNNER_DEBUG: ${{ secrets.ACTIONS_RUNNER_DEBUG }}
    - name: Setup `packer`
      uses: hashicorp/setup-packer@main
      id: setup
      with:
        version: ${{ env.PRODUCT_VERSION }}

    - name: Run `packer init`
      id: init
      working-directory: ./packer
      run: "packer init ."

    - name: Run `packer fmt`
      id: format
      working-directory: ./packer
      run: "packer fmt -check ."

    - name: Run `packer validate`
      id: validate
      working-directory: ./packer
      run: "packer validate ."
      
